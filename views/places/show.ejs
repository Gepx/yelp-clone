<% layout('layouts/app') %>

<link rel="stylesheet" href="/css/stars.css" />

<div class="row mb-5">
  <div class="col-6">
    <div class="card">
      <div id="carouselExample" class="carousel slide">
        <div class="carousel-inner">
          <% place.images.forEach((image, index) => { %>
          <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
            <img
              src="/images/<%= image.filename %>"
              class="d-block w-100"
              alt="<%= place.title %>" />
          </div>
          <% }) %>
        </div>
        <% if(place.images.length > 1) { %>
        <button
          class="carousel-control-prev"
          type="button"
          data-bs-target="#carouselExample"
          data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button
          class="carousel-control-next"
          type="button"
          data-bs-target="#carouselExample"
          data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
        <% } %>
      </div>

      <div class="card-body">
        <h5 class="card-title"><%= place.title %></h5>
        <p class="card-text"><%= place.description %></p>
      </div>
      <ul class="list-group list-group-flush">
        <li class="list-group-item"><%= place.location %></li>
        <li class="list-group-item">Author: <%= place.author.username %></li>
        <li class="list-group-item"><%= place.price %></li>
      </ul>
      <% if(currentUser && place.author.equals(currentUser._id)) { %>
      <div class="card-body">
        <a
          href="/places/<%= place._id %>/edit"
          class="card-link btn btn-warning text-white"
          >Edit</a
        >
        <form
          action="/places/<%= place._id %>?_method=DELETE"
          method="post"
          style="display: inline !important">
          <button class="btn btn-danger">Delete</button>
        </form>
      </div>
      <% } %>
    </div>
  </div>
  <div class="col-6">
    <div
      style="width: 640px; height: 480px; margin-bottom: 5%"
      id="mapContainer"></div>
    <% if(currentUser) { %>
    <h3>Leave a review</h3>
    <form
      action="/places/<%= place._id %>/reviews"
      method="post"
      class="validated-form mb-3"
      novalidate>
      <div class="mb-3">
        <label for="rating">Rating</label>
        <fieldset class="starability-basic">
          <input
            type="radio"
            id="no-rate"
            class="input-no-rate"
            name="review[rating]"
            value="1"
            checked
            aria-label="No rating." />
          <input
            type="radio"
            id="first-rate1"
            name="review[rating]"
            value="1" />
          <label for="first-rate1" title="Terrible">1 star</label>
          <input
            type="radio"
            id="first-rate2"
            name="review[rating]"
            value="2" />
          <label for="first-rate2" title="Not good">2 stars</label>
          <input
            type="radio"
            id="first-rate3"
            name="review[rating]"
            value="3" />
          <label for="first-rate3" title="Average">3 stars</label>
          <input
            type="radio"
            id="first-rate4"
            name="review[rating]"
            value="4" />
          <label for="first-rate4" title="Very good">4 stars</label>
          <input
            type="radio"
            id="first-rate5"
            name="review[rating]"
            value="5" />
          <label for="first-rate5" title="Amazing">5 stars</label>
        </fieldset>
      </div>
      <div class="mb-3">
        <label for="review">Review</label>
        <textarea
          name="review[body]"
          id="body"
          cols="30"
          rows="5"
          class="form-control"
          required></textarea>
        <div class="invalid-feedback">Please fill this field.</div>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
    <% } %> <% for(const review of place.reviews) { %>
    <div class="card mb-3">
      <div class="card-body">
        <p class="starability-result" data-rating="<%= review.rating %>">
          Rated: 3 stars
        </p>
        <p class="card-text"><%= review.body %></p>
        <% if(currentUser && review.author.equals(currentUser._id)) { %>
        <form
          action="/places/<%= place._id %>/reviews/<%= review._id %>?_method=DELETE"
          method="post"
          style="display: inline !important">
          <button class="btn btn-danger btn-sm">Delete</button>
        </form>
        <% } %>
      </div>
    </div>
    <% } %>
  </div>
</div>

<script>
  const place = <%- JSON.stringify(place) %>;
  const placeLocation = { lng: place.geometry.coordinates[0], lat: place.geometry.coordinates[1] }
</script>

<script>
  // Initialize the platform object
  const platform = new H.service.Platform({
    apikey: "aptfx9xzcpTOepAf02R70CUdsddyJB-1Nlmu3le06IM",
  });

  // Obtain the default map types from the platform object
  const defaultLayers = platform.createDefaultLayers();

  // Instantiate (and display) the map
  const map = new H.Map(
    document.getElementById("mapContainer"),
    defaultLayers.vector.normal.map,
    {
      zoom: 10,
      center: placeLocation,
    }
  );

  const svgMarkup = `<svg width="50px" height="50px" viewBox="-4 0 36 36" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --> <title>map-marker</title> <desc>Created with Sketch.</desc> <defs> </defs> <g id="Vivid.JS" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="Vivid-Icons" transform="translate(-125.000000, -643.000000)"> <g id="Icons" transform="translate(37.000000, 169.000000)"> <g id="map-marker" transform="translate(78.000000, 468.000000)"> <g transform="translate(10.000000, 6.000000)"> <path d="M14,0 C21.732,0 28,5.641 28,12.6 C28,23.963 14,36 14,36 C14,36 0,24.064 0,12.6 C0,5.641 6.268,0 14,0 Z" id="Shape" fill="#FF6E6E"> </path> <circle id="Oval" fill="#0C0058" fill-rule="nonzero" cx="14" cy="14" r="7"> </circle> </g> </g> </g> </g> </g> </g></svg>`;

  const icon = new H.map.Icon(svgMarkup);
  const marker = new H.map.Marker(placeLocation, { icon: icon });

  map.addObject(marker);
  map.setCenter(placeLocation);

  const ui = H.ui.UI.createDefault(map, defaultLayers, "en-US");
  const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
</script>
